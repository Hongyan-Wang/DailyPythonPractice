# To recheck, it is a dynamic programming problem
# https://leetcode.com/problems/strange-printer/description/

class Solution:
    def strangePrinter(self, s: str) -> int:
        n = len(s)
        if n == 0:
            return 0
        dp = [[0]* n for _ in range(n)]

        for length in range(1, n+1):
            for i in range(n-length+1):
                j = i+length -1
                dp[i][j] = length
                for k in range(i, j):
                    total_turns = dp[i][k]+dp[k+1][j]
                    if s[k] == s[j]:
                        total_turns -=1
                    dp[i][j] = min(dp[i][j], total_turns)
        return dp[0][n-1]
