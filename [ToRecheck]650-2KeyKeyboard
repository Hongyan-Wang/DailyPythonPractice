# https://leetcode.com/problems/2-keys-keyboard/description/
# Solution: https://leetcode.com/problems/2-keys-keyboard/solutions/5655034/o-n-beats-100-0-ms-bottom-up-dp-prime-factorization-multiple-languages


class Solution:
    def minSteps(self, n: int) -> int:
        if n == 1:
            return 0
        minOperations = [float('inf')] * (n +1)
        minOperations[1] = 0

        for currentCount in range(2, n+1):
            for factor in range(1, int(currentCount**0.5)+1):
                if currentCount % factor == 0:
                    minOperations[currentCount] = min(minOperations[currentCount], minOperations[factor] + currentCount//factor)
                    if factor != currentCount // factor:
                        minOperations[currentCount] = min(minOperations[currentCount], minOperations[currentCount // factor] + factor)
        return minOperations[n]
